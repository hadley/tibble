# API for tibble package

## Exported functions

add_case(.data, ..., .before = NULL, .after = NULL)
add_column(.data, ..., .before = NULL, .after = NULL)
add_row(.data, ..., .before = NULL, .after = NULL)
as.tibble(x, ...)
as_data_frame(x, ...)
as_tibble(x, ..., .rows = NULL, .name_repair = c("check_unique", "unique", "universal", "minimal"), rownames = pkgconfig::get_config("tibble::rownames", NULL))
column_to_rownames(.data, var = "rowname")
data_frame(...)
data_frame_(xs)
deframe(x)
enframe(x, name = "name", value = "value")
frame_data(...)
frame_matrix(...)
glimpse(x, width = NULL, ...)
has_rownames(.data)
is.tibble(x)
is_tibble(x)
knit_print.trunc_mat(x, options)
lst(...)
lst_(xs)
new_tibble(x, ..., nrow, class = NULL, subclass = NULL)
remove_rownames(.data)
repair_names(x, prefix = "V", sep)
rowid_to_column(.data, var = "rowid")
rownames_to_column(.data, var = "rowname")
set_tidy_names(x, syntactic = FALSE, quiet = FALSE)
tbl_sum(x)
tibble(..., .rows = NULL, .name_repair = c("check_unique", "unique", "universal", "minimal"))
tibble_(xs)
tidy_names(name, syntactic = FALSE, quiet = FALSE)
tribble(...)
trunc_mat(x, n = NULL, width = NULL, n_extra = NULL)
validate_tibble(x)
view(x, title = NULL, ...)

## Own S3 methods

as_tibble.NULL(x, ...)
as_tibble.data.frame(x, validate = TRUE, ..., .rows = NULL, .name_repair = c("check_unique", "unique", "universal", "minimal"), rownames = pkgconfig::get_config("tibble::rownames", NULL))
as_tibble.default(x, ...)
as_tibble.list(x, validate = TRUE, ..., .rows = NULL, .name_repair = c("check_unique", "unique", "universal", "minimal"))
as_tibble.matrix(x, ...)
as_tibble.poly(x, ...)
as_tibble.table(x, `_n` = "n", ..., n = `_n`)
as_tibble.ts(x, ...)
glimpse.data.frame(x, width = NULL, ...)
glimpse.default(x, width = NULL, max.level = 3, ...)
glimpse.tbl(x, width = NULL, ...)
tbl_sum.default(x)
tbl_sum.tbl(x)
type_sum.tbl_df(x)

## Foreign S3 methods

$.tbl_df(x, name)
[.tbl_df(x, i, j, drop = FALSE)
[[.tbl_df(x, i, j, ..., exact = TRUE)
as.data.frame.tbl_df(x, row.names = NULL, optional = FALSE, ...)
check_names_before_after.character(j, names)
check_names_before_after.default(j, ...)
check_names_df.character(j, x)
check_names_df.default(j, ...)
check_names_df.logical(j, x)
check_names_df.numeric(j, x)
format.tbl(x, ..., n = NULL, width = NULL, n_extra = NULL)
format.trunc_mat(x, width = NULL, ...)
format_v.character(x)
format_v.default(x)
format_v.factor(x)
format_v.list(x)
names<-.tbl_df(x, value)
print.tbl(x, ..., n = NULL, width = NULL, n_extra = NULL)
print.trunc_mat(x, ...)
quote_n.character(x)
quote_n.default(x)
row.names<-.tbl_df(x, value)

## Exported data

.__C__tbl_df: classRepresentation (S4[1])

## Reexported objects

rlang::has_name
pillar::is_vector_s3
pillar::obj_sum
pillar::type_sum
